/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package projekakhirperpustakaan;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;

/**
 *
 * @author Ridho
 */
public class panelBookmark extends javax.swing.JPanel {

    private final int userIdActive;

    /**
     * Creates new form panelBookmark
     */
    public panelBookmark(int AUid) {
        this.userIdActive = AUid;
        initComponents();
        load_bookMark();
    }
    ImageIcon iconBerhasil = new javax.swing.ImageIcon(getClass().getResource("checked.png"));
    ImageIcon iconGagal = new javax.swing.ImageIcon(getClass().getResource("remove.png"));
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBukmark = new javax.swing.JTable();
        panelRound1 = new test.PanelRound();
        previewJudul = new javax.swing.JLabel();
        previewImg = new javax.swing.JPanel();
        imageLbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblPenulis = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        colSinopsis = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        btnUnBookmark = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 102, 0));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(137, 168, 178));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        tbBukmark.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tbBukmark.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Judul Buku"
            }
        ));
        tbBukmark.setRowHeight(30);
        tbBukmark.setRowMargin(5);
        tbBukmark.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBukmarkMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBukmark);

        jPanel2.add(jScrollPane1);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 71, 260, 433));

        panelRound1.setBackground(new java.awt.Color(179, 200, 207));
        panelRound1.setRoundBottomLeft(50);
        panelRound1.setRoundBottomRight(50);
        panelRound1.setRoundTopLeft(50);
        panelRound1.setRoundTopRight(50);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        previewJudul.setFont(new java.awt.Font("Poppins SemiBold", 0, 12)); // NOI18N
        previewJudul.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        previewJudul.setText("Judul Buku");
        panelRound1.add(previewJudul, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 260, -1));

        previewImg.setLayout(new javax.swing.BoxLayout(previewImg, javax.swing.BoxLayout.LINE_AXIS));
        previewImg.add(imageLbl);

        panelRound1.add(previewImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 180, 270));

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel4.setText("Sinopsis :");
        panelRound1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        lblPenulis.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        lblPenulis.setText("Nama Penulis");
        panelRound1.add(lblPenulis, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 200, -1));

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel5.setText("Penulis   :");
        panelRound1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        colSinopsis.setEditable(false);
        colSinopsis.setColumns(20);
        colSinopsis.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        colSinopsis.setLineWrap(true);
        colSinopsis.setRows(5);
        jScrollPane2.setViewportView(colSinopsis);

        panelRound1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 260, 190));

        jLabel6.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Book Details");
        panelRound1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 14, 470, -1));

        btnUnBookmark.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        btnUnBookmark.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/reading-book.png"))); // NOI18N
        btnUnBookmark.setText("Tandai Sudah Baca");
        btnUnBookmark.setBorder(null);
        btnUnBookmark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnBookmarkActionPerformed(evt);
            }
        });
        panelRound1.add(btnUnBookmark, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 210, 30));

        jLabel2.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/bookmark (1).png"))); // NOI18N
        panelRound1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, -30, 140, -1));

        jPanel1.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, 480, 430));

        jLabel1.setFont(new java.awt.Font("Poppins SemiBold", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Your Bookmark ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 770, -1));

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnBookmarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnBookmarkActionPerformed
        int row = tbBukmark.getSelectedRow();
        if (row != -1){
            String judul = tbBukmark.getValueAt(row, 0).toString();
            Integer bookId = idBukuMap.get(judul);
            Integer userId = userIdActive;
            if (bookId == null || userId == null) {
                JOptionPane.showMessageDialog(this, "Data user atau buku tidak valid.", "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
                return;
            }
            String sql = "DELETE FROM bookmarks WHERE user_id = ? AND book_id = ?";
            try {
                Connection conn = Koneksi.getKoneksi();
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setInt(1, userId);
                stmt.setInt(2, bookId);
                int rowsAffected = stmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Buku berhasil dihapus dari bookmark.", "Sukses", JOptionPane.INFORMATION_MESSAGE,iconBerhasil);
                    load_bookMark();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus buku dari bookmark.", "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
                }
            } catch (Exception e) {
                System.out.println(e);
                return;
            }
        }else {
            JOptionPane.showMessageDialog(this, "Pilih buku yang ingin dihapus dari bookmark.", "Kesalahan", JOptionPane.WARNING_MESSAGE,iconGagal);
        }
    }//GEN-LAST:event_btnUnBookmarkActionPerformed
    private Map<Integer, String> gambarBuku = new HashMap<>();
    private Map<String, String> deskripsiBuku = new HashMap<>();
    private Map<String, String> pengarangBuku = new HashMap<>();
    private Map<String, Integer> idBukuMap = new HashMap<>();

    private void tbBukmarkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBukmarkMouseClicked
        int row = tbBukmark.getSelectedRow();
        if (row != -1) {
            String judul = tbBukmark.getValueAt(row, 0).toString();
            Integer idBuku = idBukuMap.get(judul);
            String deskripsi = deskripsiBuku.get(judul);
            String pengarang = pengarangBuku.get(judul);
            String pathGambar2 = gambarBuku.get(idBuku);
            System.out.println(pathGambar2);
            previewJudul.setText("Judul: " + judul);
            lblPenulis.setText("Penulis: " + pengarang);
            colSinopsis.setText(deskripsi);
            if (pathGambar2 != null && !pathGambar2.isEmpty()) {
                ImageIcon icon = new ImageIcon(pathGambar2);
                imageLbl.setIcon(icon);
                imageLbl.setText("");
            } else {
                System.out.println("gambar tidak ada");
                imageLbl.setText("");
                
            }
        }
        
    }//GEN-LAST:event_tbBukmarkMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUnBookmark;
    private javax.swing.JTextArea colSinopsis;
    private javax.swing.JLabel imageLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPenulis;
    private test.PanelRound panelRound1;
    private javax.swing.JPanel previewImg;
    private javax.swing.JLabel previewJudul;
    private javax.swing.JTable tbBukmark;
    // End of variables declaration//GEN-END:variables

    private void load_bookMark() {
        int activeID = userIdActive;
         if (activeID == 0 ) {
        JOptionPane.showMessageDialog(this, "User tidak valid, silakan login terlebih dahulu.", "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
        return;
        }
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Judul Buku");
        String sql = "SELECT b.id_buku, b.judul_buku, b.pengarang, b.deskripsi, b.path_gambar2 from bookmarks a join buku b on a.book_id = b.id_buku where a.user_id = ?";
        try {
            java.sql.Connection conn = Koneksi.getKoneksi();
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, activeID);  
            java.sql.ResultSet res = stmt.executeQuery();

            while (res.next()) {
                int idBuku = res.getInt("id_buku");
                String judulBuku = res.getString("judul_buku");
                String pengarang = res.getString("pengarang");
                String deskripsi = res.getString("deskripsi");
                String gambar = res.getString("path_gambar2");
                model.addRow(new Object[]{judulBuku});
                gambarBuku.put(idBuku, gambar);
                deskripsiBuku.put (judulBuku , deskripsi);
                idBukuMap.put(judulBuku, idBuku);
                pengarangBuku.put(judulBuku, pengarang);
            }
            tbBukmark.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal mengambil data buku.");
        }
    }
}
