/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package projekakhirperpustakaan;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ridho
 */
public class panelManUser extends javax.swing.JPanel {

    /**
     * Creates new form panelManUser
     */
    public panelManUser() {
        initComponents();
        load_tbUser();
        load_sumUser();
    }
ImageIcon iconBerhasil = new javax.swing.ImageIcon(getClass().getResource("checked.png"));
ImageIcon iconGagal = new javax.swing.ImageIcon(getClass().getResource("remove.png"));
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        panelRound1 = new test.PanelRound();
        txtUsername = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSaveUser = new javax.swing.JButton();
        btnDelUser = new javax.swing.JButton();
        btnUpUser = new javax.swing.JButton();
        panelRound2 = new test.PanelRound();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jumlahUser = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(137, 168, 178));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Poppins ExtraBold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manajemen User");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 40));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        tbUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbUser);

        jPanel2.add(jScrollPane1);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 320, 450));

        panelRound1.setRoundBottomLeft(40);
        panelRound1.setRoundBottomRight(40);
        panelRound1.setRoundTopLeft(40);
        panelRound1.setRoundTopRight(40);

        txtUsername.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUsername.setAlignmentX(2.0F);
        txtUsername.setAlignmentY(2.0F);
        txtUsername.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtUsername.setMargin(new java.awt.Insets(10, 6, 5, 6));

        txtPass.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        txtPass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPass.setAlignmentX(2.0F);
        txtPass.setAlignmentY(2.0F);
        txtPass.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtPass.setMargin(new java.awt.Insets(10, 6, 5, 6));

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel2.setText("Masukkan Username :");

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel3.setText("Masukkan Password :");

        btnSaveUser.setBackground(new java.awt.Color(80, 141, 78));
        btnSaveUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnSaveUser.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/diskette.png"))); // NOI18N
        btnSaveUser.setText("Save");
        btnSaveUser.setBorder(null);
        btnSaveUser.setBorderPainted(false);
        btnSaveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveUserActionPerformed(evt);
            }
        });

        btnDelUser.setBackground(new java.awt.Color(235, 100, 64));
        btnDelUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnDelUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDelUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/delete.png"))); // NOI18N
        btnDelUser.setText("Delete");
        btnDelUser.setBorder(null);
        btnDelUser.setBorderPainted(false);
        btnDelUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelUserActionPerformed(evt);
            }
        });

        btnUpUser.setBackground(new java.awt.Color(22, 121, 171));
        btnUpUser.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnUpUser.setForeground(new java.awt.Color(255, 255, 255));
        btnUpUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/refresh-arrow.png"))); // NOI18N
        btnUpUser.setText("Update");
        btnUpUser.setBorder(null);
        btnUpUser.setBorderPainted(false);
        btnUpUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addComponent(btnDelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpUser, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jPanel1.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 340, 200));

        panelRound2.setRoundBottomLeft(40);
        panelRound2.setRoundBottomRight(40);
        panelRound2.setRoundTopLeft(40);
        panelRound2.setRoundTopRight(40);

        jLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel4.setText("Total User :");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/user.png"))); // NOI18N

        jumlahUser.setFont(new java.awt.Font("Poppins SemiBold", 0, 48)); // NOI18N
        jumlahUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jumlahUser.setText("999");

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4))
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jumlahUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jumlahUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 190, 130));

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnDelUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelUserActionPerformed
        int selectedRow = tbUser.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) tbUser.getValueAt(selectedRow, 0);

            int confirm = JOptionPane.showConfirmDialog(null,
                "Apakah Anda yakin ingin menghapus user ini?",
                "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                hapusUser(id);
                load_tbUser();
                load_sumUser();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pilih user yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
        }
        resetDel();
    }//GEN-LAST:event_btnDelUserActionPerformed

    private void tbUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUserMouseClicked
        int selectedRow = tbUser.getSelectedRow();
        if (selectedRow != -1) {
            String id = tbUser.getValueAt(selectedRow, 0).toString();
            String username = tbUser.getValueAt(selectedRow, 1).toString();
            String pass = tbUser.getValueAt(selectedRow, 2).toString();
            int idUserClick = Integer.parseInt(id);
            txtUsername.setText(username);
            txtPass.setText(pass);
        }
    }//GEN-LAST:event_tbUserMouseClicked

    private void btnUpUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpUserActionPerformed
        int selectedRow = tbUser.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) tbUser.getValueAt(selectedRow, 0);
            String username = txtUsername.getText().trim();
            String password = txtPass.getText().trim();
            updateUser(id, username, password);
            load_tbUser();
        } else {
            JOptionPane.showMessageDialog(null, "Pilih user yang ingin diperbarui.", "Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
        }
    }//GEN-LAST:event_btnUpUserActionPerformed

    private void btnSaveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveUserActionPerformed
        String username = txtUsername.getText().trim();
        String password = txtPass.getText().trim();
        tambahUser(username, password);
        load_sumUser();
        load_tbUser();
    }//GEN-LAST:event_btnSaveUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelUser;
    private javax.swing.JButton btnSaveUser;
    private javax.swing.JButton btnUpUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jumlahUser;
    private test.PanelRound panelRound1;
    private test.PanelRound panelRound2;
    private javax.swing.JTable tbUser;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void load_tbUser() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Username");
        model.addColumn("Password");
        String sql = "SELECT id, username, password FROM user where username != 'admin'";
        try {
            Connection conn = Koneksi.getKoneksi();
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("id"),
                rs.getString("username"),
                rs.getString("password"),
            });
        }
        tbUser.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal memuat data users: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
        }
    }

    private void load_sumUser() {
        String query = "SELECT COUNT(*) AS total_user FROM user";
        try (Connection conn = Koneksi.getKoneksi();
             PreparedStatement stmt = conn.prepareStatement(query);
             ResultSet res = stmt.executeQuery()) {

            if (res.next()) {
                int totalUser = res.getInt("total_user")-1;
                jumlahUser.setText(""+totalUser);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void hapusUser(int id) {
        String sql = "DELETE FROM user WHERE id = ?";
        try (Connection conn = Koneksi.getKoneksi();
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, id);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "User berhasil dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE,iconBerhasil);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal menghapus user.", "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Kesalahan: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
        }
    }

    private void updateUser(int id, String username, String password) {
        if (username.trim().isEmpty() || password.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Semua kolom harus diisi bung!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (UpUsernameValidasi(id, username)) {
            JOptionPane.showMessageDialog(null, "Username sudah terdaftar. Silakan pilih username lain :v", "Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
            return; 
        }
        String sql = "UPDATE user SET username = ?, password = ? WHERE id = ?";
        try (Connection conn = Koneksi.getKoneksi();
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, username);
            stmt.setString(2, password);
            stmt.setInt(3, id);
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "User berhasil diperbarui.", "Sukses", JOptionPane.INFORMATION_MESSAGE,iconBerhasil);
                load_tbUser();
            } else {
                JOptionPane.showMessageDialog(null, "Gagal memperbarui user.", "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Kesalahan: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
        }
    }

    private boolean UpUsernameValidasi(int id,String username) {
        String sql = "SELECT COUNT(*) FROM user WHERE username = ? AND id != ?";
        try (Connection conn = Koneksi.getKoneksi();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, username);
            stmt.setInt(2, id);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return rs.getInt(1) > 0;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false; 
    }

    private boolean usernameTersediaCek(String username) {
        String sql = "SELECT COUNT(*) FROM user WHERE username = ?";
        try (Connection conn = Koneksi.getKoneksi();
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, username);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return rs.getInt(1) > 0;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false; 
    }

    private void tambahUser(String username, String password) {
        if (username.trim().isEmpty() || password.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Semua kolom harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
            return; 
        }

        if (usernameTersediaCek(username)) {
            JOptionPane.showMessageDialog(null, "Username sudah terdaftar. Silakan pilih username lain.", "Peringatan", JOptionPane.WARNING_MESSAGE,iconGagal);
            return;
        }
        String sql = "INSERT INTO user (username, password) VALUES (?, ?)";
        try (Connection conn = Koneksi.getKoneksi();
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, username);
            stmt.setString(2, password);
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "User berhasil ditambahkan sirr.", "Sukses", JOptionPane.INFORMATION_MESSAGE,iconBerhasil);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal menambahkan user, cobalagi Sirr", "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Kesalahan: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE,iconGagal);
        }
    }

    private void resetDel() {
        txtPass.setText("");
        txtUsername.setText("");
    }
    
}
